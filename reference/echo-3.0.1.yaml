openapi: 3.0.1
info:
  title: echo-3.0
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /echo:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/echo'
      operationId: get-echo
      description: Get all the echo messages
      x-amazon-apigateway-integration:
        httpMethod: GET
        type: aws_proxy
        uri: '${function_arn}'
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
    post:
      summary: ''
      operationId: post-echo
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/echo'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: '${function_arn}'
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  '/echo/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo'
      operationId: get-echo-id
      description: Get a specific echo
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: GET
        uri: '${function_arn}'
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
    delete:
      summary: ''
      operationId: delete-echo-id
      responses:
        '200':
          description: OK
      description: Delete echo message
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: DELETE
        uri: '${function_arn}'
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
components:
  schemas:
    echo:
      title: echo
      type: object
      description: Echo message
      properties:
        id:
          type: string
        message:
          type: string
      required:
        - message
